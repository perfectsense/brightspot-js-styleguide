package com.psddev.styleguide.viewgenerator;

import java.util.Collections;
import java.util.List;
import java.util.Set;

import com.psddev.styleguide.JsonObject;

class TemplateFieldDefinitionString extends TemplateFieldDefinition {

    private boolean isAutoGeneratedText;

    public TemplateFieldDefinitionString(TemplateDefinitions templateDefinitions, String parentTemplate, String name, List<JsonObject> values, Set<String> mapTemplates, String javaClassNamePrefix, boolean isDefaulted, boolean isStrictlyTyped) {
        super(templateDefinitions, parentTemplate, name, values, mapTemplates, javaClassNamePrefix, isDefaulted, isStrictlyTyped);

        values.forEach((value) -> {
            if (value instanceof com.psddev.styleguide.JsonString) {
                String string = ((com.psddev.styleguide.JsonString) value).getValue();

                // ignoring this for now...
                if (string.startsWith("{{")) {
                    isAutoGeneratedText = true;
                }
            }
        });
    }

    @Override
    public String getJavaFieldType(ViewClassImportsBuilder importsBuilder) {
        return isStrictlyTyped ? "String" : "Object";
    }

    @Override
    public Set<TemplateFieldType> getFieldValueTypes() {
        return Collections.singleton(NativeJavaTemplateFieldType.STRING);
    }
}
